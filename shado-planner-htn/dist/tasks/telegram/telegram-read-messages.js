import {SystemMessage,HumanMessage}from'@langchain/core/messages';var u={identifier:"telegram-read-messages",description:"Reply to retrieved Telegram messages.",conditions:{"telegram-has-client":e=>e._origin.memory.state?.["telegram-has-client"]===true,"telegram-has-messages":e=>e._origin.memory.state?.["telegram-has-messages"]===true,"telegram-last-replied":e=>e._origin.memory.state?.["telegram-last-replied"]<=Date.now()-1*1e3},effects:{"telegram-has-messages":{value:e=>false,trigger:async e=>(e._origin.memory.state["telegram-messages"]=[],e._origin.memory.state["telegram-has-messages"]=false,{success:true,payload:void 0})},"telegram-last-replied":{value:e=>e._origin.memory.state?.["telegram-last-replied"]<=Date.now()-1*1e3,trigger:async e=>(e._origin.memory.state["telegram-last-replied"]=Date.now(),{success:true,payload:void 0})}},actions:{"telegram-read-messages":async e=>{try{let a=[],r=[],s=!1;return e._origin.memory.state?.["telegram-messages"].forEach(async t=>{if(t.is_read)return;if(e._origin.clients.telegram.markAsRead(t.id),e._context.utils.logger.send({type:"LOG",origin:{type:"AGENT",id:e._origin.id},data:{message:"Got a Telegram message",payload:{message:t.text}}}),!m(e,t.metadata.chat.type,t.text)){e._context.utils.logger.send({type:"LOG",origin:{type:"AGENT",id:e._origin.id},data:{message:"Chose to ignore Telegram message:",payload:{message:t.text}}}),a.push(!1);return}e._origin.clients.telegram.getMessageThreads().includes(`telegram-${t.from.id}`)||(e._origin.clients.telegram.addMessageThread(`telegram-${t.from.id}`),s=!0),s?r=[new SystemMessage(e._origin.config.bio.join(`
`)),new HumanMessage(t.text)]:r=[new HumanMessage(t.text)];let i=await e._origin.model.getMessagesResponse(r,{thread:`telegram-${t.from.id}`});await e._origin.clients.telegram.replyToMessage(i,t.metadata.replyFn),a.push(!0);}),{success:!0,payload:void 0}}catch(a){return {success:false,payload:a}}}}},m=(e,a,r)=>{let s=a==="private",t=r.includes(`@${process.env[`TELEGRAM_${e._origin.id.toUpperCase()}_BOT_HANDLE`]}`)||r.includes(`${process.env[`TELEGRAM_${e._origin.id.toUpperCase()}_BOT_HANDLE`]}`)||r.includes(`${e._origin.name}`);return !![s,t].some(g=>g)};export{u as default};