var a=async(e,t)=>{for(let n=0;n<e.length;n++)await t(e[n],n,e);},p=async(e,t)=>Promise.all(e.map(t)).then(n=>e.filter((y,s)=>n[s]));var o=async(e,t)=>(await p(e,t)).length===e.length;var f=async(e,t,n)=>(t.events.emit("planner",{timestamp:Date.now(),origin:"shado-planner-htn",data:{identifier:"puppetPlan",plan:e}}),await o(e,async s=>{if(n.utils.logger.send({type:"LOG",origin:{type:"PUPPET",id:t.id},data:{message:`Executing task "${s.identifier}"`}}),!Object.keys(s.conditions).every(r=>s.conditions[r]({_origin:t,_context:n})))return n.utils.logger.send({type:"WARNING",origin:{type:"PUPPET",id:t.id},data:{message:`Task "${s.identifier}" skipped`}}),false;let i=[];return await a(Object.keys(s.actions),async r=>{let c=await s.actions[r]({_origin:t,_context:n});i.push(c);}),i.every(r=>r.success)?(await a(Object.keys(s.effects),async r=>{await s.effects[r].trigger({_origin:t,_context:n});}),true):false}));export{f as executePlan};